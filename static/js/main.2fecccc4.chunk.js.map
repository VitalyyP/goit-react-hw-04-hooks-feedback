{"version":3,"sources":["components/Container/Container.module.css","components/NotificationMessage/NotificationMessage.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Container/Container.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","NotificationMessage","text","className","s","Statistics","good","neutral","bad","countTotalFeedbacks","countPositiveFeedbackPercentage","defaultProps","FeedbackOptions","options","onLeaveFeedback","bottons","map","option","onClick","e","type","button","shortid","generate","Section","title","children","container","Container","App","useState","setGood","setNeutral","setBad","target","textContent","prev","totalFeedbacks","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,UAAY,+B,0KCCf,SAASC,EAAT,GAAwC,IAATC,EAAQ,EAARA,KAC5C,OAAO,mBAAGC,UAAWC,IAAEF,KAAhB,SAAuBA,ICCjB,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,oBACAC,EACC,EADDA,gCAEA,OACE,mCACGD,IAAwB,EACvB,qCACE,oBAAGN,UAAWC,IAAEF,KAAhB,mBAA6BI,KAC7B,oBAAGH,UAAWC,IAAEF,KAAhB,sBAAgCK,KAChC,oBAAGJ,UAAWC,IAAEF,KAAhB,kBAA4BM,KAC5B,oBAAGL,UAAWC,IAAEF,KAAhB,oBAA8BO,OAC9B,oBAAGN,UAAWC,IAAEF,KAAhB,iCACuBQ,EAAgCD,KADvD,WAKF,cAACR,EAAD,MDlBRA,EAAoBU,aAAe,CACjCT,KAAM,qB,qCEHO,SAASU,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKX,UAAWC,IAAEW,QAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,QAAS,SAAAC,GAAC,OAAIL,EAAgBK,IAC9BC,KAAK,SACLjB,UAAWC,IAAEiB,OAHf,SAMGJ,GAFIK,IAAQC,iB,oBCTR,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKvB,UAAWC,IAAEuB,UAAlB,UACGF,GAAS,oBAAItB,UAAWC,IAAEqB,MAAjB,SAAyBA,IAClCC,K,qBCJQ,SAASE,EAAT,GAAkC,IAAbF,EAAY,EAAZA,SAClC,OAAO,sBAAKvB,UAAWC,IAAEuB,UAAlB,UAA8BD,EAA9B,OCEM,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KA4BA,OACE,eAACL,EAAD,WACE,cAACJ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACb,EAAD,CAAiBC,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBA7BpC,SAAAK,GAGtB,OAFwBA,EAAEe,OAAlBC,aAGN,IAAK,OACHJ,GAAQ,SAAAK,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHJ,GAAW,SAAAI,GAAI,OAAIA,EAAO,KAC1B,MAEF,IAAK,MACHH,GAAO,SAAAG,GAAI,OAAIA,EAAO,KACtB,MAEF,QACE,aAcF,cAACZ,EAAD,CAASC,MAAM,aAAf,SACE,cAACpB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,oBAfoB,kBAAMH,EAAOC,EAAUC,GAgB3CE,gCAdgC,SAAA2B,GAAc,OACpDC,KAAKC,MAAOjC,EAAO+B,EAAkB,aC9BzCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,U,kBCR1B7C,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.2fecccc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2AChG\"};","import s from './NotificationMessage.module.css';\r\n\r\nexport default function NotificationMessage({ text }) {\r\n  return <p className={s.text}>{text}</p>;\r\n}\r\n\r\nNotificationMessage.defaultProps = {\r\n  text: 'No feedback given',\r\n};\r\n","import s from './Statistics.module.css';\r\nimport NotificationMessage from '../NotificationMessage';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedbacks,\r\n  countPositiveFeedbackPercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      {countTotalFeedbacks() > 0 ? (\r\n        <>\r\n          <p className={s.text}>Good: {good}</p>\r\n          <p className={s.text}>Neutral: {neutral}</p>\r\n          <p className={s.text}>Bad: {bad}</p>\r\n          <p className={s.text}>Total: {countTotalFeedbacks()}</p>\r\n          <p className={s.text}>\r\n            Positive feedbacks: {countPositiveFeedbackPercentage(countTotalFeedbacks())} %\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <NotificationMessage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  countTotalFeedbacks: PropTypes.func,\r\n  countPositiveFeedbackPercentage: PropTypes.func,\r\n};\r\n","import s from './FeedbackOptions.module.css';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.bottons}>\r\n      {options.map(option => (\r\n        <button\r\n          onClick={e => onLeaveFeedback(e)}\r\n          type=\"button\"\r\n          className={s.button}\r\n          key={shortid.generate()}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h3 className={s.title}>{title}</h3>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children} </div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Container from './components/Container';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = e => {\n    const { textContent } = e.target;\n\n    switch (textContent) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedbacks = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = totalFeedbacks =>\n    Math.round((good / totalFeedbacks) * 100);\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={handleIncrement} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          countTotalFeedbacks={countTotalFeedbacks}\n          countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3pXeQ\"};"],"sourceRoot":""}